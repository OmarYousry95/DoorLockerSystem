Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              i2c.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              Control_ECU.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              Control_ECU.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

g_eeprom            0x5               Control_ECU.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD Control_ECU.o
LOAD external_eeprom.o
LOAD i2c.o
LOAD timer1.o
LOAD uart.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xf5e
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 Control_ECU.o
 .text          0x00000092        0x0 external_eeprom.o
 .text          0x00000092        0x0 i2c.o
 .text          0x00000092        0x0 timer1.o
 .text          0x00000092        0x0 uart.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.main     0x00000092       0xbe Control_ECU.o
                0x00000092                main
 .text.Control_checkForSavedPassword
                0x00000150       0x8c Control_ECU.o
                0x00000150                Control_checkForSavedPassword
 .text.Control_setNewPassword
                0x000001dc       0x4c Control_ECU.o
                0x000001dc                Control_setNewPassword
 .text.Control_checkNewPassword
                0x00000228       0xb6 Control_ECU.o
                0x00000228                Control_checkNewPassword
 .text.Control_receiveAndCheckPassword
                0x000002de      0x13e Control_ECU.o
                0x000002de                Control_receiveAndCheckPassword
 .text.motorRotateClockwise
                0x0000041c       0x38 Control_ECU.o
                0x0000041c                motorRotateClockwise
 .text.motorRotateAntiClockwise
                0x00000454       0x38 Control_ECU.o
                0x00000454                motorRotateAntiClockwise
 .text.motorStop
                0x0000048c       0x38 Control_ECU.o
                0x0000048c                motorStop
 .text.buzzerON
                0x000004c4       0x1c Control_ECU.o
                0x000004c4                buzzerON
 .text.buzzerOFF
                0x000004e0       0x1c Control_ECU.o
                0x000004e0                buzzerOFF
 .text.fireBuzzerOrOpenDoor
                0x000004fc       0x7c Control_ECU.o
                0x000004fc                fireBuzzerOrOpenDoor
 .text.EEPROM_init
                0x00000578       0x6e external_eeprom.o
                0x00000578                EEPROM_init
 .text.EEPROM_writeByte
                0x000005e6       0x82 external_eeprom.o
                0x000005e6                EEPROM_writeByte
 .text.EEPROM_readByte
                0x00000668       0xc0 external_eeprom.o
                0x00000668                EEPROM_readByte
 .text.TWI_init
                0x00000728      0x198 i2c.o
                0x00000728                TWI_init
 .text.TWI_start
                0x000008c0       0x20 i2c.o
                0x000008c0                TWI_start
 .text.TWI_stop
                0x000008e0       0x16 i2c.o
                0x000008e0                TWI_stop
 .text.TWI_write
                0x000008f6       0x2e i2c.o
                0x000008f6                TWI_write
 .text.TWI_readWithACK
                0x00000924       0x26 i2c.o
                0x00000924                TWI_readWithACK
 .text.TWI_readWithNACK
                0x0000094a       0x26 i2c.o
                0x0000094a                TWI_readWithNACK
 .text.TWI_getStatus
                0x00000970       0x1e i2c.o
                0x00000970                TWI_getStatus
 .text.__vector_6
                0x0000098e       0x66 timer1.o
                0x0000098e                __vector_6
 .text.__vector_8
                0x000009f4       0x66 timer1.o
                0x000009f4                __vector_8
 .text.TIMER1_init
                0x00000a5a      0x158 timer1.o
                0x00000a5a                TIMER1_init
 .text.TIMER1_changeClock
                0x00000bb2       0x28 timer1.o
                0x00000bb2                TIMER1_changeClock
 .text.TIMER1_DeInit
                0x00000bda       0x5c timer1.o
                0x00000bda                TIMER1_DeInit
 .text.TIMER1_setCallBack
                0x00000c36       0x24 timer1.o
                0x00000c36                TIMER1_setCallBack
 .text.UART_init
                0x00000c5a      0x15c uart.o
                0x00000c5a                UART_init
 .text.UART_sendByte
                0x00000db6       0x4a uart.o
                0x00000db6                UART_sendByte
 .text.UART_receiveByte
                0x00000e00       0x3e uart.o
                0x00000e00                UART_receiveByte
 .text.UART_sendString
                0x00000e3e       0x52 uart.o
                0x00000e3e                UART_sendString
 .text.UART_receiveString
                0x00000e90       0x86 uart.o
                0x00000e90                UART_receiveString
 .text.libgcc   0x00000f16       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00000f16                __udivmodsi4
 .text.libgcc   0x00000f5a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000f5a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000f5a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000f5a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000f5a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000f5a                exit
                0x00000f5a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000f5a        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000f5e                _etext = .

.data           0x00800060       0x20 load address 0x00000f5e
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 Control_ECU.o
 .data          0x00800060        0x0 external_eeprom.o
 .data          0x00800060        0x0 i2c.o
 .data          0x00800060        0x0 timer1.o
 .data          0x00800060        0x0 uart.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.eeprom_addr
                0x00800060        0x2 Control_ECU.o
                0x00800060                eeprom_addr
 .data.eeprom_flag
                0x00800062        0x2 Control_ECU.o
                0x00800062                eeprom_flag
 .data.Timer1_Config
                0x00800064        0x6 Control_ECU.o
                0x00800064                Timer1_Config
 .data.func     0x0080006a        0x8 Control_ECU.o
                0x0080006a                func
 .data.trial.1456
                0x00800072        0x1 Control_ECU.o
 *(.rodata)
 *(.rodata*)
 .rodata.C.0.1364
                0x00800073        0x7 Control_ECU.o
 .rodata.C.0.1295
                0x0080007a        0x6 external_eeprom.o
 *(.gnu.linkonce.d*)
                0x00800080                . = ALIGN (0x2)
                0x00800080                _edata = .
                0x00800080                PROVIDE (__data_end, .)

.bss            0x00800080        0xa
                0x00800080                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800080        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800080        0x0 Control_ECU.o
 .bss           0x00800080        0x0 external_eeprom.o
 .bss           0x00800080        0x0 i2c.o
 .bss           0x00800080        0x0 timer1.o
 .bss           0x00800080        0x0 uart.o
 .bss           0x00800080        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800080        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800080        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800080        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.g_functionID
                0x00800080        0x1 Control_ECU.o
                0x00800080                g_functionID
 .bss.g_state   0x00800081        0x1 Control_ECU.o
                0x00800081                g_state
 .bss.count.1557
                0x00800082        0x1 Control_ECU.o
 .bss.g_callBackPtr
                0x00800083        0x2 timer1.o
 *(COMMON)
 COMMON         0x00800085        0x5 Control_ECU.o
                0x00800085                g_eeprom
                0x0080008a                PROVIDE (__bss_end, .)
                0x00000f5e                __data_load_start = LOADADDR (.data)
                0x00000f7e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080008a        0x0
                0x0080008a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080008a                PROVIDE (__noinit_end, .)
                0x0080008a                _end = .
                0x0080008a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1b84
 *(.stab)
 .stab          0x00000000      0xc18 Control_ECU.o
 .stab          0x00000c18      0x3d8 external_eeprom.o
                                0x630 (size before relaxing)
 .stab          0x00000ff0      0x3b4 i2c.o
                                0x624 (size before relaxing)
 .stab          0x000013a4      0x3c0 timer1.o
                                0x660 (size before relaxing)
 .stab          0x00001764      0x420 uart.o
                                0x6d8 (size before relaxing)

.stabstr        0x00000000     0x1057
 *(.stabstr)
 .stabstr       0x00000000     0x1057 Control_ECU.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Control_ECU.elf elf32-avr)
LOAD linker stubs
